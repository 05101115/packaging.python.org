
=====================
Quick Recommendations
=====================

If all you're after is clear, simple advice for what to use right now, here it
is:

* Use :ref:`distribute` to build and package Python distributions and publish
  them to the `Python Package Index`_ (PyPI). The :ref:`setuptools
  <setuptools_pre_merge>` and :ref:`distribute` projects have recently merged
  into a :ref:`new setuptools <setuptools_post_merge>`, but that project is
  currently still in beta, and once stable, will still need to be officially
  supported in pip and virtualenv to be useful to most users.
* Use :ref:`pip` to install Python distributions from PyPI
* Use :ref:`virtualenv` to isolate application specific dependencies from the
  system Python installation
* Use :ref:`buildout` (primarily focused on the web development community) or
  `hashdist`_ and `conda`_ (primarily focused on the scientific community) if
  you want fully intregrated software stacks, without worrying about
  interoperability with platform provided package management systems
* If you're on Linux, the versions of these tools provided as platform specific
  packages should be fine for most purposes, but may be missing some of the
  latest features described on the project websites (and, in Fedora's case,
  calls ``pip`` ``pip-python`` due to a naming conflict with an old Perl tool).

Unfortunately, there are a couple of qualifications required on that simple
advice:

* Use ``easy_install`` or :ref:`buildout` if you need to install from the binary
  ``egg`` format, which :ref:`pip` can't currently handle
* Aside from using :ref:`distribute` over the :ref:`original setuptools
  <setuptools_pre_merge>` (again, keeping in mind that those two projects are in
  the process of merging back into a :ref:`single setuptools
  <setuptools_post_merge>` project), and :ref:`pip` over ``easy_install``
  whenever possible, try to ignore the confusing leftovers of slanging matches
  between developers of competing tools, as well as information about upcoming
  tools that are likely still months or years away from being meaningful to
  anyone not directly involved in developing packaging tools.

.. _Python Package Index: https://pypi.python.org
.. _hashdist: http://hashdist.readthedocs.org/en/latest/
.. _conda: http://docs.continuum.io/conda/
